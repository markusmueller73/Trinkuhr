;  *;  * Trinkuhr;  *;  * pref_window.pbi;  *Procedure.l load_preferences( *prefs.Preferences )    If OpenPreferences(CONFIG_PATH$ + #APP_CONFIG)        PreferenceGroup(#PREF_GROUP_WINDOW)    *prefs\x_pos  = ReadPreferenceLong(#PREF_WINDOW_HORI, #RIGHT)    *prefs\y_pos  = ReadPreferenceLong(#PREF_WINDOW_VERT, #TOP)    *prefs\height = ReadPreferenceLong(#PREF_WINDOW_HEIGHT, #POPUP_WINDOW_HEIGHT)    *prefs\width  = ReadPreferenceLong(#PREF_WINDOW_WIDTH, #POPUP_WINDOW_WIDTH)        PreferenceGroup(#PREF_GROUP_COLOR)    *prefs\bg_color = ReadPreferenceLong(#PREF_BACKGROUND_COLOR, RGB(0, 0, 0))        PreferenceGroup(#PREF_GROUP_FONT)    *prefs\font_name  = ReadPreferenceString(#PREF_FONT_NAME, "Tahoma")    *prefs\font_size  = ReadPreferenceLong(#PREF_FONT_SIZE, 14)    *prefs\font_style = ReadPreferenceLong(#PREF_FONT_STYLE, #PB_Font_Bold)    *prefs\fg_color = ReadPreferenceLong(#PREF_FOREGROUND_COLOR, RGB(255, 255, 255))        PreferenceGroup(#PREF_GROUP_TIMER)    *prefs\wait_time = ReadPreferenceLong(#PREF_TIMER_WAIT, 15)    *prefs\show_time = ReadPreferenceLong(#PREF_TIMER_SHOW, 2)        PreferenceGroup(#PREF_GROUP_TEXT)    *prefs\drink_text = ReadPreferenceString(#PREF_DRINK_TEXT, "Es wird Zeit etwas zu trinken.")        ClosePreferences()        ProcedureReturn 1      Else        CompilerIf #PB_Compiler_OS = #PB_OS_Windows      *prefs\x_pos = #RIGHT      *prefs\y_pos = #BOTTOM    CompilerElse      *prefs\x_pos = #RIGHT      *prefs\y_pos = #TOP    CompilerEndIf        *prefs\height = #POPUP_WINDOW_HEIGHT    *prefs\width  = #POPUP_WINDOW_WIDTH        *prefs\bg_color = RGB(0, 0, 0)    *prefs\fg_color = RGB(255, 255, 255)        *prefs\font_name  = "Tahoma"    *prefs\font_size  = 14    *prefs\font_style = #PB_Font_Bold        *prefs\wait_time = 15    *prefs\show_time = 2        *prefs\drink_text = "Es wird Zeit etwas zu trinken."        ProcedureReturn 2      EndIf  EndProcedureProcedure.l save_preferences( *prefs.Preferences )    If FileSize(CONFIG_PATH$) = -1 ;= did not exist    CreateDirectory(CONFIG_PATH$)  EndIf    If CreatePreferences(CONFIG_PATH$ + #APP_CONFIG, #PB_Preference_NoSpace|#PB_Preference_GroupSeparator)        PreferenceComment(#APP_NAME + " config file")    PreferenceComment("Edit or modify this file at your own risk.")        PreferenceGroup(#PREF_GROUP_WINDOW)        WritePreferenceLong(#PREF_WINDOW_HORI, *prefs\x_pos)    WritePreferenceLong(#PREF_WINDOW_VERT, *prefs\y_pos)    WritePreferenceLong(#PREF_WINDOW_HEIGHT, *prefs\height)    WritePreferenceLong(#PREF_WINDOW_WIDTH, *prefs\width)        PreferenceGroup(#PREF_GROUP_COLOR)    WritePreferenceLong(#PREF_BACKGROUND_COLOR, *prefs\bg_color)        PreferenceGroup(#PREF_GROUP_FONT)    WritePreferenceString(#PREF_FONT_NAME, *prefs\font_name)    WritePreferenceLong(#PREF_FONT_SIZE, *prefs\font_size)    WritePreferenceLong(#PREF_FONT_STYLE, *prefs\font_style)    WritePreferenceLong(#PREF_FOREGROUND_COLOR, *prefs\fg_color)        PreferenceGroup(#PREF_GROUP_TIMER)    WritePreferenceLong(#PREF_TIMER_WAIT, *prefs\wait_time)    WritePreferenceLong(#PREF_TIMER_SHOW, *prefs\show_time)        PreferenceGroup(#PREF_GROUP_TEXT)    WritePreferenceString(#PREF_DRINK_TEXT, *prefs\drink_text)        PreferenceComment("EOF")        ClosePreferences()      Else    error("Can't create config file in '"+CONFIG_PATH$+"'.")    ProcedureReturn 0  EndIf    ProcedureReturn 1  EndProcedureProcedure.i create_button_color( image.i , color.l , width.l = 38 , height.l = 18 )    If IsImage(image)    FreeImage(image)  EndIf    If CreateImage(image, width, height, 24, color)    ProcedureReturn image  Else    error("Can't create image for colored button.")    ProcedureReturn 0  EndIf  EndProcedureProcedure.l open_preferences_window()    Protected.i x, y, w, h, img    If OpenWindow(#PREF_WINDOW, #PB_Ignore, #PB_Ignore, 300, 600, #APP_NAME + Space(1) + "Einstellungen", #PB_Window_Tool|#PB_Window_Invisible, WindowID(#POPUP_WND))        If ContainerGadget(#PREF_CONT_SCREEN, 0, 0, 300, 200)            w = GadgetWidth(#PREF_CONT_SCREEN)      h = GadgetHeight(#PREF_CONT_SCREEN)            FrameGadget(#PREF_FRAME_POSITION, 10, 10, w-20, h-20, "Position des Fensters" + ":")            If FrameGadget(#PREF_FRAME_SCREEN, 20, 35, w-40, h-60, "", #PB_Frame_Single)        OptionGadget(#PREF_OPTION_TL,  30,  40, 15, 15, "")        OptionGadget(#PREF_OPTION_TC, 140,  40, 15, 15, "")        OptionGadget(#PREF_OPTION_TR, 255,  40, 15, 15, "")        OptionGadget(#PREF_OPTION_ML,  30,  95, 15, 15, "")        OptionGadget(#PREF_OPTION_MC, 140,  95, 15, 15, "")        OptionGadget(#PREF_OPTION_MR, 255,  95, 15, 15, "")        OptionGadget(#PREF_OPTION_BL,  30, 150, 15, 15, "")        OptionGadget(#PREF_OPTION_BC, 140, 150, 15, 15, "")        OptionGadget(#PREF_OPTION_BR, 255, 150, 15, 15, "")      EndIf            CloseGadgetList()          EndIf        If ContainerGadget(#PREF_CONT_COLOR, 0, 200, 300, 100)            w = GadgetWidth(#PREF_CONT_COLOR)      h = GadgetHeight(#PREF_CONT_COLOR)            FrameGadget(#PREF_FRAME_COLOR, 10, 5, w-20, h-10, "Farbauswahl" + ":")            TextGadget(#PREF_TXT_COLOR_FG, 20, 25, 150, 25, "Textfarbe" + ":")      ButtonImageGadget(#PREF_BTN_COLOR_FG, 180, 20, 50, 30, 0)            TextGadget(#PREF_TXT_COLOR_BG, 20, 65, 150, 25, "Hintergrundfarbe" + ":")      ButtonImageGadget(#PREF_BTN_COLOR_BG, 180, 60, 50, 30, 0)            CloseGadgetList()          EndIf        If ContainerGadget(#PREF_CONT_FONT, 0, 300, 300, 130)            w = GadgetWidth(#PREF_CONT_FONT)      h = GadgetHeight(#PREF_CONT_FONT)            FrameGadget(#PREF_FRAME_FONT, 10, 5, w-20, h-10, "Schriftauswahl" + ":")            StringGadget(#PREF_STR_FONT, 20, 25, 260, 40, "", #PB_String_ReadOnly|#PB_Text_Center)      ;SetGadgetFont(#PREF_STR_FONT, FontID(#POPUP_FONT))            ButtonGadget(#PREF_BTN_FONT, 70, 80, 160, 25, "Wähle eine Schrift")            CloseGadgetList()          EndIf        If ContainerGadget(#PREF_CONT_TIMES, 0, 430, 300, 100)            w = GadgetWidth(#PREF_CONT_TIMES)      h = GadgetHeight(#PREF_CONT_TIMES)            FrameGadget(#PREF_FRAME_TIMES, 10, 5, w-20, h-10, "Zeitsteuerung" + ":")            TextGadget(#PREF_TXT_WAIT, 20, 25, 100, 25, "Erinnerung alle")      SpinGadget(#PREF_SPIN_WAIT, 140, 20, 80, 25, 1, 240, #PB_Spin_Numeric)      TextGadget(#PREF_TXT_WAIT_MIN, 240, 25, 50, 25, "Minuten")            TextGadget(#PREF_TXT_SHOW, 20, 60, 100, 25, "Dauer der Anzeige")      SpinGadget(#PREF_SPIN_SHOW, 140, 55, 80, 25, 1, 60, #PB_Spin_Numeric)      TextGadget(#PREF_TXT_SHOW_MIN, 240, 60, 50, 25, "Minuten")            CloseGadgetList()          EndIf        ButtonGadget(#PREF_BTN_OK, 25, 550, 100, 30, "Speichern")    ButtonGadget(#PREF_BTN_CANCEL, 175, 550, 100, 30, "Abbrechen")      Else    error("Can't open preferences window.", 5)  EndIf    ProcedureReturn WindowID(#PREF_WINDOW)  EndProcedureProcedure.l get_preferences( *prefs.Preferences )    If IsWindow(#PREF_WINDOW)        If GetGadgetState(#PREF_OPTION_BC)      *prefs\x_pos = #CENTER      *prefs\y_pos = #BOTTOM    ElseIf GetGadgetState(#PREF_OPTION_BL)      *prefs\x_pos = #LEFT      *prefs\y_pos = #BOTTOM    ElseIf GetGadgetState(#PREF_OPTION_BR)      *prefs\x_pos = #RIGHT      *prefs\y_pos = #BOTTOM    ElseIf GetGadgetState(#PREF_OPTION_MC)      *prefs\x_pos = #CENTER      *prefs\y_pos = #MIDDLE    ElseIf GetGadgetState(#PREF_OPTION_ML)      *prefs\x_pos = #LEFT      *prefs\y_pos = #MIDDLE    ElseIf GetGadgetState(#PREF_OPTION_MR)      *prefs\x_pos = #RIGHT      *prefs\y_pos = #MIDDLE    ElseIf GetGadgetState(#PREF_OPTION_TC)      *prefs\x_pos = #CENTER      *prefs\y_pos = #TOP    ElseIf GetGadgetState(#PREF_OPTION_TL)      *prefs\x_pos = #LEFT      *prefs\y_pos = #TOP    ElseIf GetGadgetState(#PREF_OPTION_TR)      *prefs\x_pos = #RIGHT      *prefs\y_pos = #TOP    EndIf        *prefs\fg_color = GetGadgetData(#PREF_BTN_COLOR_FG)    *prefs\bg_color = GetGadgetData(#PREF_BTN_COLOR_BG)        *prefs\wait_time = GetGadgetState(#PREF_SPIN_WAIT)    *prefs\show_time = GetGadgetState(#PREF_SPIN_SHOW)      Else    error("Can't get preferences, window [PREF_WINDOW] is not present.")    ProcedureReturn 0  EndIf  EndProcedureProcedure.l set_preferences( *prefs.Preferences )    Protected.i img    If IsWindow(#PREF_WINDOW)        If *prefs\y_pos = #TOP      If *prefs\x_pos = #LEFT        SetGadgetState(#PREF_OPTION_TL, #True)      ElseIf *prefs\x_pos = #CENTER        SetGadgetState(#PREF_OPTION_TC, #True)      ElseIf *prefs\x_pos = #RIGHT        SetGadgetState(#PREF_OPTION_TR, #True)      EndIf    ElseIf *prefs\y_pos = #MIDDLE      If *prefs\x_pos = #LEFT        SetGadgetState(#PREF_OPTION_ML, #True)      ElseIf *prefs\x_pos = #CENTER        SetGadgetState(#PREF_OPTION_MC, #True)      ElseIf *prefs\x_pos = #RIGHT        SetGadgetState(#PREF_OPTION_MR, #True)      EndIf    ElseIf *prefs\y_pos = #BOTTOM      If *prefs\x_pos = #LEFT        SetGadgetState(#PREF_OPTION_BL, #True)      ElseIf *prefs\x_pos = #CENTER        SetGadgetState(#PREF_OPTION_BC, #True)      ElseIf *prefs\x_pos = #RIGHT        SetGadgetState(#PREF_OPTION_BR, #True)      EndIf    EndIf        img = create_button_color(#IMAGE_PREF_FG_COLOR, *prefs\fg_color)    SetGadgetAttribute(#PREF_BTN_COLOR_FG, #PB_Button_Image, ImageID(#IMAGE_PREF_FG_COLOR))    SetGadgetData(#PREF_BTN_COLOR_FG, *prefs\fg_color)        img = create_button_color(#IMAGE_PREF_BG_COLOR, *prefs\bg_color)    SetGadgetAttribute(#PREF_BTN_COLOR_BG, #PB_Button_Image, ImageID(#IMAGE_PREF_BG_COLOR))    SetGadgetData(#PREF_BTN_COLOR_BG, *prefs\bg_color)        If IsFont(#POPUP_FONT)      SetGadgetFont(#PREF_STR_FONT, FontID(#POPUP_FONT))    EndIf        SetGadgetText(#PREF_STR_FONT, *prefs\font_name)        SetGadgetState(#PREF_SPIN_WAIT, *prefs\wait_time)    SetGadgetText(#PREF_SPIN_WAIT, Str(*prefs\wait_time))        SetGadgetState(#PREF_SPIN_SHOW, *prefs\show_time)    SetGadgetText(#PREF_SPIN_SHOW, Str(*prefs\show_time))      Else    error("Can't set preferences, window [PREF_WINDOW] is not present.")    ProcedureReturn 0  EndIf  EndProcedure; IDE Options = PureBasic 5.73 LTS (Windows - x64); CursorPosition = 129; FirstLine = 105; Folding = --; EnableXP; EnablePurifier; EnableCompileCount = 0; EnableBuildCount = 0; EnableExeConstant